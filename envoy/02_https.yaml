admin:
  access_log_path: /tmp/admin_access.log
  address:
    socket_address: { address: 0.0.0.0, port_value: 9901 }

static_resources:
  listeners:
  - name: listener_http
    address:
      socket_address: { address: 0.0.0.0, port_value: 8080 }
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        config:
          stat_prefix: ingress_http
          route_config:
            virtual_hosts:
            - name: backend
              domains: ["example.com"]
              routes:
              - match: { prefix: "/" }
                redirect: { path_redirect: "/", https_redirect: true }
          http_filters:
          - name: envoy.router
  - name: listener_https
    address:
      socket_address: { address: 0.0.0.0, port_value: 6443 }
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        config:
          stat_prefix: ingress_https
          route_config:
            virtual_hosts:
            - name: backend
              domains: ["example.com"]
              routes:
              - match: { prefix: "/service/1" }
                route: { cluster: service1 }
              - match: { prefix: "/service/2" }
                route: { cluster: service2 }
          http_filters:
          - name: envoy.router
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.api.v2.auth.DownstreamTlsContext
          common_tls_context:
            tls_certificates:
            - certificate_chain:
                filename: "/etc/certs/example-com.crt"
              private_key:
                filename: "/etc/certs/example-com.key"
  clusters:
  - name: service1
    connect_timeout: 0.25s
    type: strict_dns
    dns_lookup_family: v4_only
    lb_policy: round_robin
    hosts: [{ socket_address: { address: 172.18.0.3, port_value: 80 } }]
  - name: service2
    connect_timeout: 0.25s
    type: strict_dns
    dns_lookup_family: v4_only
    lb_policy: round_robin
    hosts: [{ socket_address: { address: 172.18.0.4, port_value: 80 } }]

